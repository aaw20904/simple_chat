<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link  rel="stylesheet"  href="/css/bootstrap.min.css">
    <script src="/js/bootstrap.bundle.min.js" type="text/javascript"></script>
    
</head>
<body>
    <h6><%- val %></h6>
 <form class="container m-2 border border-primary d-flex flex-column justify-content-center  needs-validation" novalidate>
   <article>
     <label for="validationServerUsername" class="form-label">Username</label>
        <div class="input-group has-validation">
        <span class="input-group-text" id="inputGroupPrepend3">@</span>
          <input type="text" class="form-control is-invalid" id="validationServerUsername" aria-describedby="inputGroupPrepend3 validationServerUsernameFeedback" required>
         <div class="invalid-feedback">
            Please choose a username.
          </div>
          <div class="valid-feedback">
            Looks good!
          </div>
    </article>
    <article>
        <label for="validationServerPassword" class="form-label">Username</label>
           <div class="input-group has-validation">
           <span class="input-group-text" id="inputGroupPrepend3">@</span>
             <input type="text" class="form-control is-invalid" id="validationServerPassword" aria-describedby="inputGroupPrepend3 validationServerUsernameFeedback" required>
            <div id="validationServerUsernameFeedback" class="invalid-feedback">
               Please choose a username.
             </div>
             <div class="valid-feedback">
               Looks good!
             </div>
    </article>
    <article>
        <button class="btn btn-primary" type="submit">Submit form</button>
    </article>


</form>
    <img id="demoShow"/>
    <input type="file" value="Choose JPG File" id="demoPick"
        accept="image/*" onchange="readFile()"/>

<script>


    window.onload=()=>{
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
            form.addEventListener('click', event => {
            if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
            }

            form.classList.add('was-validated')
            }, false)
        })
        })()
    }
function readFile () {
  
    // (A) GET SELECTED FILE
    let selected = document.getElementById("demoPick")
    .files[0];
    // (B) READ SELECTED FILE
    let reader = new FileReader();
    reader.addEventListener("load", () => {
        let y = reader.result;
        sendDataToServer(null,y);
        document.getElementById("demoShow").src = reader.result;
    });
    reader.readAsDataURL(selected);
}

async function sendDataToServer (url, img) {
     //define the adress - where you want to send
    const currentUrl = new URL(document.location.href)
    let response;
    // current base URL
    // url = `${currentUrl.protocol}//${currentUrl.hostname}:${currentUrl.port}`;
     url = `${currentUrl.origin}${currentUrl.pathname}data${currentUrl.port}`;
    const options={
        headers:{"Content-type":"application/json;charset=utf-8"},
        body:JSON.stringify({clientData: img}),
        method:'post'
    }
    try{
        response = await fetch(`${url}`,options);
    } catch(e){
        return {status:false, err:e}
    }
       
   if (response.ok) {
        return {status:true}
   }

}
</script>
</body>
</html>